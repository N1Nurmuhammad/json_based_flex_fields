services:
  db:
    container_name: db
    image: postgres:16
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-app}
      POSTGRES_USER: ${POSTGRES_USER:-app}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-secret}
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-app} -d ${POSTGRES_DB:-app}" ]
      interval: 5s
      timeout: 3s
      retries: 20

  api:
    container_name: api
    build: .
    depends_on:
      db:
        condition: service_healthy
    environment:
      DJANGO_SETTINGS_MODULE: ucell_opt.settings
      DATABASE_URL: postgres://${POSTGRES_USER:-app}:${POSTGRES_PASSWORD:-secret}@db:5432/${POSTGRES_DB:-app}
      DJANGO_SECRET_KEY: ${DJANGO_SECRET_KEY:-dev-secret-change-me}
      DJANGO_DEBUG: ${DJANGO_DEBUG:-false}
      DJANGO_ALLOWED_HOSTS: ${DJANGO_ALLOWED_HOSTS:-*}
    volumes:
      - .:/app
      - media:/app/media
      - static:/app/static
    ports:
      - "8000:8000"
    command: python manage.py runserver 0.0.0.0:8000
  redis:
    image: redis:7.2
    container_name: redis
    ports:
      - "6379:6379"
    restart: always
    volumes:
      - redis_data:/data
volumes:
  pgdata: { }
  media: { }
  static: { }
  redis_data: { }
